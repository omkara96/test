from datetime import datetime
from airflow import DAG
from airflow.operators.trigger_dagrun import TriggerDagRunOperator

# Define the list of dictionaries containing the parameters
parameter_list = [
    {"param1": "value1", "param2": "value2"},
    {"param1": "value3", "param2": "value4"},
    # Add more dictionaries as needed
]

# Define the main DAG
default_args = {
    'start_date': datetime(2023, 1, 1),
    'catchup': False,
}

dag = DAG('dynamic_dag', default_args=default_args, schedule_interval=None)

# Create tasks dynamically based on the parameter list
for i, parameters in enumerate(parameter_list):
    task_id = f'task_{i+1}'
    trigger_task_id = f'trigger_task_{i+1}'

    trigger_task = TriggerDagRunOperator(
        task_id=trigger_task_id,
        trigger_dag_id='existing_dag_id',  # Specify the ID of the existing DAG you want to trigger
        conf=parameters,  # Pass the parameters as configuration to the triggered DAG
        dag=dag,
    )

    # Set the task dependencies
    if i > 0:
        prev_task_id = f'trigger_task_{i}'
        prev_task = dag.get_task(prev_task_id)
        trigger_task.set_upstream(prev_task)
