#!/usr/bin/env python3

import os
import datetime

# Declaration session for variables
timestamp = datetime.datetime.now().strftime('%Y%m%d%H%M')
pid = os.getpid()
current_date = datetime.datetime.now().strftime('%Y.%m.%d_%H.%M.%S')

working_folder = 
data_file_dir_check=
conf_folder = 	
src_file_dir = 	

# Assign Parameters to variables
country = 'JP'
src_file_nm = sorted([f for f in os.listdir() if f.endswith('_ZXW_ULT_VAN.dat')])[0]

# clear existing source files
src_file_dir_check = len(os.listdir(working_folder))
if src_file_dir_check != 0:
    os.remove(os.path.join(working_folder, 'ULTMARC_*.txt'))

data_file_dir_check = len(os.listdir(data_file_dir_check))
if data_file_dir_check != 0:
    os.remove(os.path.join(data_file_dir_check, 'ULTMARC_*.txt'))

# splitting file process in while loop
start_row = 1
end_row = sum(1 for _ in open(os.path.join(conf_folder, 'CIM_ULTMARC_FILE.conf'))) # source file split configure file
start_column = 1
end_column = len(open(os.path.join(conf_folder, 'CIM_ULTMARC_FILE.conf')).readline().split(','))

while start_row <= end_row:
    os.chdir(conf_folder)
    with open(os.path.join(conf_folder, 'CIM_ULTMARC_FILE.conf'), 'r') as f:
        row = f.readlines()[start_row-1] # get the row values from configure file
        class_id = row.split(',')[0] # based on first field in file will split
        fname = row.split(',')[1].strip() # filenames from the .conf file
        fname_time = f"{fname}_{datetime.datetime.now().strftime('%Y%m%d%H%M')}.txt"
        with open(os.path.join(src_file_dir, src_file_nm), 'r') as src_file:
            with open(os.path.join(working_folder, fname_time), 'w') as dest_file:
                for line in src_file:
                    if line.split(',')[0] == class_id:
                        dest_file.write(line)
        print(f"CLASSIFICATION_ID : {class_id} THIS FILE HAS GENERATED : {fname_time}")
        with open(os.path.join(working_folder, 'ULTMARC_FILECOUNT_SPLITS.txt'), 'a') as cnt_file:
            cnt_value = sum(1 for line in open(os.path.join(working_folder, fname_time)))
            cnt_file.write(f"{country},{fname_time},{cnt_value}\n")
    start_row += 1
